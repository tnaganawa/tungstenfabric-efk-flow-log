

####
## Source descriptions:
##

## built-in TCP input
## @see http://docs.fluentd.org/articles/in_forward
<source>
  @type forward
  @id input_forward
</source>

## built-in UNIX socket input
#<source>
#  type unix
#</source>

# HTTP input
# POST http://localhost:8888/<tag>?json=<json>
# POST http://localhost:8888/td.myapp.login?json={"user"%3A"me"}
# @see http://docs.fluentd.org/articles/in_http
<source>
  @type http
  @id input_http
  port 8888
</source>

## live debugging agent
<source>
  @type debug_agent
  @id input_debug_agent
  bind 127.0.0.1
  port 24230
</source>

####
## vRouter flow input:
##

## File input
<source>
  @type tail
  @id input_tail
  <parse>
   @type regexp
   expression /^(?<severity>[^ ]*) (?<something>[^ ]*)  (?<sandeshseverity>[^ ]*): SessionData: .* vmi = (?<vmi>[^ ]*).* vn = (?<vn>[^ ]*).* (application = (?<application>[^ ]*))?.* (remote_application = (?<remote_application>[^ ]*))?.* remote_vn = (?<remote_vn>[^ ]*) .*vrouter_ip = (?<vrouter_ip>[^ ]*) .*local_ip = (?<local_ip>[^ ]*) .*service_port = (?<service_port>[^ ]*) .*protocol = (?<protocol>[^ ]*) .*sampled_forward_bytes = (?<sampled_forward_bytes>[^ ]*) .*sampled_forward_pkts = (?<sampled_forward_pkts>[^ ]*) .*ip = (?<ip>[^ ]*) .*port = (?<port>[^ ]*) .*action = (?<action>[^ ]*) .*vm = (?<vm>[^ ]*) .*other_vrouter_ip = (?<other_vrouter_ip>[^ ]*).*$/
   types sampled_forward_pkts:integer,sampled_forward_bytes:integer,service_port:integer,protocol:integer
  </parse>
  path /var/log/contrail/vrouter-agent/contrail-vrouter-agent.log
  tag tungstenfabric.vrouter.logs
</source>

<filter tungstenfabric.vrouter.logs>
  @type record_transformer
  <record>
    ipfix.sourceIPv4Address ${record["local_ip"]}
    ipfix.destinationIPv4Address ${record["ip"]}
    ipfix.sourcePodName ${record["vmi"]}
    ipfix.destinationPodName ${record["vmi"]} ## temporary
    ipfix.sourcePodNamespace ${record["vn"]}
    ipfix.destinationPodNamespace ${record["remote_vn"]}
    ipfix.sourceNodeName ${record["vrouter_ip"]}
    ipfix.destinationNodeName ${record["other_vrouter_ip"]}
    ipfix.octetDeltaCount ${record["sampled_forward_bytes"]}
    ipfix.reverseOctetDeltaCount ${record["sampled_forward_bytes"]}
    ipfix.bytes ${record["sampled_forward_bytes"]}
    ipfix.packets ${record["sampled_forward_pkts"]}
  </record>
</filter>

<match tungstenfabric.vrouter.logs>
  @type elasticsearch
  host elasticsearch-ip ## please change this
  port 9200
  logstash_format true
  logstash_prefix flow
</match>


